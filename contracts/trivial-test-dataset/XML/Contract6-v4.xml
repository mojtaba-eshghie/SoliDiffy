<tree type="source_file" pos="0" length="2146">
	<tree type="comment" pos="0" length="31" label="// SPDX-License-Identifier: MIT"/>
	<tree type="pragma_directive" pos="32" length="24">
		<tree type="pragma" pos="32" length="6" label="pragma"/>
		<tree type="solidity_pragma_token" pos="39" length="16">
			<tree type="solidity" pos="39" length="8" label="solidity"/>
			<tree type="solidity_version_comparison_operator" pos="47" length="2">
				<tree type="^" pos="47" length="2" label=" ^"/>
			</tree>
			<tree type="solidity_version" pos="49" length="6" label="0.8.20"/>
		</tree>
	</tree>
	<tree type="comment" pos="58" length="50" label="// External contract used for try / catch examples"/>
	<tree type="contract_declaration" pos="109" length="458">
		<tree type="contract" pos="109" length="8" label="contract"/>
		<tree type="identifier" pos="118" length="3" label="Foo"/>
		<tree type="contract_body" pos="122" length="445">
			<tree type="state_variable_declaration" pos="128" length="21">
				<tree type="type_name" pos="128" length="7">
					<tree type="primitive_type" pos="128" length="7">
						<tree type="address" pos="128" length="7" label="address"/>
					</tree>
				</tree>
				<tree type="visibility" pos="136" length="6">
					<tree type="public" pos="136" length="6" label="public"/>
				</tree>
				<tree type="identifier" pos="143" length="5" label="owner"/>
			</tree>
			<tree type="constructor_definition" pos="154" length="242">
				<tree type="constructor" pos="154" length="11" label="constructor"/>
				<tree type="parameter" pos="166" length="14">
					<tree type="type_name" pos="166" length="7">
						<tree type="primitive_type" pos="166" length="7">
							<tree type="address" pos="166" length="7" label="address"/>
						</tree>
					</tree>
					<tree type="identifier" pos="174" length="6" label="_owner"/>
				</tree>
				<tree type="function_body" pos="182" length="214">
					<tree type="expression_statement" pos="192" length="49">
						<tree type="call_expression" pos="192" length="48">
							<tree type="identifier" pos="192" length="7" label="require"/>
							<tree type="call_argument" pos="200" length="20">
								<tree type="binary_expression" pos="200" length="20">
									<tree type="type_cast_expression" pos="200" length="10">
										<tree type="primitive_type" pos="200" length="7">
											<tree type="address" pos="200" length="7" label="address"/>
										</tree>
										<tree type="number_literal" pos="208" length="1" label="0"/>
									</tree>
									<tree type="!=" pos="211" length="2" label="!="/>
									<tree type="identifier" pos="214" length="6" label="_owner"/>
								</tree>
							</tree>
							<tree type="call_argument" pos="222" length="17">
								<tree type="string_literal" pos="222" length="17">
									<tree type="string" pos="222" length="17" label="&quot;invalid address&quot;"/>
								</tree>
							</tree>
						</tree>
					</tree>
					<tree type="comment" pos="242" length="16" label="// Mutation here"/>
					<tree type="expression_statement" pos="267" length="61">
						<tree type="call_expression" pos="267" length="60">
							<tree type="identifier" pos="267" length="6" label="assert"/>
							<tree type="call_argument" pos="274" length="52">
								<tree type="binary_expression" pos="274" length="52">
									<tree type="identifier" pos="274" length="6" label="_owner"/>
									<tree type="==" pos="281" length="2" label="=="/>
									<tree type="number_literal" pos="284" length="42" label="0x0000000000000000000000000000000000000001"/>
								</tree>
							</tree>
						</tree>
					</tree>
					<tree type="comment" pos="329" length="16" label="// Mutation here"/>
					<tree type="expression_statement" pos="354" length="19">
						<tree type="assignment_expression" pos="354" length="18">
							<tree type="identifier" pos="354" length="5" label="owner"/>
							<tree type="=" pos="360" length="1" label="="/>
							<tree type="type_cast_expression" pos="362" length="10">
								<tree type="primitive_type" pos="362" length="7">
									<tree type="address" pos="362" length="7" label="address"/>
								</tree>
								<tree type="number_literal" pos="370" length="1" label="1"/>
							</tree>
						</tree>
					</tree>
					<tree type="comment" pos="374" length="16" label="// Mutation here"/>
				</tree>
			</tree>
			<tree type="function_definition" pos="402" length="163">
				<tree type="function" pos="402" length="8" label="function"/>
				<tree type="identifier" pos="411" length="6" label="myFunc"/>
				<tree type="parameter" pos="418" length="6">
					<tree type="type_name" pos="418" length="4">
						<tree type="primitive_type" pos="418" length="4">
							<tree type="uint" pos="418" length="4" label="uint"/>
						</tree>
					</tree>
					<tree type="identifier" pos="423" length="1" label="x"/>
				</tree>
				<tree type="visibility" pos="426" length="6">
					<tree type="public" pos="426" length="6" label="public"/>
				</tree>
				<tree type="state_mutability" pos="433" length="4">
					<tree type="pure" pos="433" length="4" label="pure"/>
				</tree>
				<tree type="return_type_definition" pos="438" length="23">
					<tree type="returns" pos="438" length="7" label="returns"/>
					<tree type="parameter" pos="447" length="13">
						<tree type="type_name" pos="447" length="6">
							<tree type="primitive_type" pos="447" length="6">
								<tree type="string" pos="447" length="6" label="string"/>
							</tree>
						</tree>
						<tree type="memory" pos="454" length="6" label="memory"/>
					</tree>
				</tree>
				<tree type="function_body" pos="462" length="103">
					<tree type="expression_statement" pos="472" length="33">
						<tree type="call_expression" pos="472" length="32">
							<tree type="identifier" pos="472" length="7" label="require"/>
							<tree type="call_argument" pos="480" length="5">
								<tree type="boolean_literal" pos="480" length="5">
									<tree type="false" pos="480" length="5">
										<tree type="false" pos="480" length="5" label="false"/>
									</tree>
								</tree>
							</tree>
							<tree type="call_argument" pos="487" length="16">
								<tree type="string_literal" pos="487" length="16">
									<tree type="string" pos="487" length="16" label="&quot;require failed&quot;"/>
								</tree>
							</tree>
						</tree>
					</tree>
					<tree type="comment" pos="506" length="16" label="// Mutation here"/>
					<tree type="return_statement" pos="531" length="28">
						<tree type="return" pos="531" length="6" label="return"/>
						<tree type="string_literal" pos="538" length="20">
							<tree type="string" pos="538" length="20" label="&quot;my func was called&quot;"/>
						</tree>
					</tree>
				</tree>
			</tree>
		</tree>
	</tree>
	<tree type="contract_declaration" pos="569" length="1577">
		<tree type="contract" pos="569" length="8" label="contract"/>
		<tree type="identifier" pos="578" length="3" label="Bar"/>
		<tree type="contract_body" pos="582" length="1564">
			<tree type="event_definition" pos="588" length="26">
				<tree type="event" pos="588" length="5" label="event"/>
				<tree type="identifier" pos="594" length="3" label="Log"/>
				<tree type="event_paramater" pos="598" length="14">
					<tree type="type_name" pos="598" length="6">
						<tree type="primitive_type" pos="598" length="6">
							<tree type="string" pos="598" length="6" label="string"/>
						</tree>
					</tree>
					<tree type="identifier" pos="605" length="7" label="message"/>
				</tree>
			</tree>
			<tree type="event_definition" pos="619" length="27">
				<tree type="event" pos="619" length="5" label="event"/>
				<tree type="identifier" pos="625" length="8" label="LogBytes"/>
				<tree type="event_paramater" pos="634" length="10">
					<tree type="type_name" pos="634" length="5">
						<tree type="primitive_type" pos="634" length="5">
							<tree type="bytes" pos="634" length="5" label="bytes"/>
						</tree>
					</tree>
					<tree type="identifier" pos="640" length="4" label="data"/>
				</tree>
			</tree>
			<tree type="state_variable_declaration" pos="652" length="15">
				<tree type="type_name" pos="652" length="3">
					<tree type="user_defined_type" pos="652" length="3">
						<tree type="identifier" pos="652" length="3" label="Foo"/>
					</tree>
				</tree>
				<tree type="visibility" pos="656" length="6">
					<tree type="public" pos="656" length="6" label="public"/>
				</tree>
				<tree type="identifier" pos="663" length="3" label="foo"/>
			</tree>
			<tree type="constructor_definition" pos="673" length="137">
				<tree type="constructor" pos="673" length="11" label="constructor"/>
				<tree type="function_body" pos="687" length="123">
					<tree type="comment" pos="697" length="72" label="// This Foo contract is used for example of try catch with external call"/>
					<tree type="expression_statement" pos="778" length="26">
						<tree type="assignment_expression" pos="778" length="25">
							<tree type="identifier" pos="778" length="3" label="foo"/>
							<tree type="=" pos="782" length="1" label="="/>
							<tree type="call_expression" pos="784" length="19">
								<tree type="new_expression" pos="784" length="7">
									<tree type="new" pos="784" length="3" label="new"/>
									<tree type="type_name" pos="788" length="3">
										<tree type="user_defined_type" pos="788" length="3">
											<tree type="identifier" pos="788" length="3" label="Foo"/>
										</tree>
									</tree>
								</tree>
								<tree type="call_argument" pos="792" length="10">
									<tree type="member_expression" pos="792" length="10">
										<tree type="identifier" pos="792" length="3" label="msg"/>
										<tree type="identifier" pos="796" length="6" label="sender"/>
									</tree>
								</tree>
							</tree>
						</tree>
					</tree>
				</tree>
			</tree>
			<tree type="comment" pos="816" length="44" label="// Example of try / catch with external call"/>
			<tree type="comment" pos="865" length="57" label="// tryCatchExternalCall(0) =&gt; Log(&quot;external call failed&quot;)"/>
			<tree type="comment" pos="927" length="55" label="// tryCatchExternalCall(1) =&gt; Log(&quot;my func was called&quot;)"/>
			<tree type="function_definition" pos="987" length="381">
				<tree type="function" pos="987" length="8" label="function"/>
				<tree type="identifier" pos="996" length="19" label="tryCatchNewContract"/>
				<tree type="parameter" pos="1016" length="14">
					<tree type="type_name" pos="1016" length="7">
						<tree type="primitive_type" pos="1016" length="7">
							<tree type="address" pos="1016" length="7" label="address"/>
						</tree>
					</tree>
					<tree type="identifier" pos="1024" length="6" label="_owner"/>
				</tree>
				<tree type="visibility" pos="1032" length="6">
					<tree type="public" pos="1032" length="6" label="public"/>
				</tree>
				<tree type="function_body" pos="1039" length="329">
					<tree type="if_statement" pos="1049" length="313">
						<tree type="if" pos="1049" length="2" label="if"/>
						<tree type="boolean_literal" pos="1053" length="5">
							<tree type="false" pos="1053" length="5">
								<tree type="false" pos="1053" length="5" label="false"/>
							</tree>
						</tree>
						<tree type="block_statement" pos="1060" length="302">
							<tree type="comment" pos="1062" length="16" label="// Mutation here"/>
							<tree type="try_statement" pos="1091" length="261">
								<tree type="try" pos="1091" length="3" label="try"/>
								<tree type="call_expression" pos="1095" length="15">
									<tree type="new_expression" pos="1095" length="7">
										<tree type="new" pos="1095" length="3" label="new"/>
										<tree type="type_name" pos="1099" length="3">
											<tree type="user_defined_type" pos="1099" length="3">
												<tree type="identifier" pos="1099" length="3" label="Foo"/>
											</tree>
										</tree>
									</tree>
									<tree type="call_argument" pos="1103" length="6">
										<tree type="identifier" pos="1103" length="6" label="_owner"/>
									</tree>
								</tree>
								<tree type="returns" pos="1111" length="7" label="returns"/>
								<tree type="parameter" pos="1120" length="7">
									<tree type="type_name" pos="1120" length="3">
										<tree type="user_defined_type" pos="1120" length="3">
											<tree type="identifier" pos="1120" length="3" label="Foo"/>
										</tree>
									</tree>
									<tree type="identifier" pos="1124" length="3" label="foo"/>
								</tree>
								<tree type="block_statement" pos="1129" length="56">
									<tree type="emit_statement" pos="1147" length="24">
										<tree type="emit" pos="1147" length="4" label="emit"/>
										<tree type="identifier" pos="1152" length="3" label="Log"/>
										<tree type="call_argument" pos="1156" length="13">
											<tree type="string_literal" pos="1156" length="13">
												<tree type="string" pos="1156" length="13" label="&quot;Foo created&quot;"/>
											</tree>
										</tree>
									</tree>
								</tree>
								<tree type="catch_clause" pos="1186" length="83">
									<tree type="catch" pos="1186" length="5" label="catch"/>
									<tree type="identifier" pos="1192" length="5" label="Error"/>
									<tree type="parameter" pos="1198" length="20">
										<tree type="type_name" pos="1198" length="6">
											<tree type="primitive_type" pos="1198" length="6">
												<tree type="string" pos="1198" length="6" label="string"/>
											</tree>
										</tree>
										<tree type="memory" pos="1205" length="6" label="memory"/>
										<tree type="identifier" pos="1212" length="6" label="reason"/>
									</tree>
									<tree type="block_statement" pos="1220" length="49">
										<tree type="emit_statement" pos="1238" length="17">
											<tree type="emit" pos="1238" length="4" label="emit"/>
											<tree type="identifier" pos="1243" length="3" label="Log"/>
											<tree type="call_argument" pos="1247" length="6">
												<tree type="identifier" pos="1247" length="6" label="reason"/>
											</tree>
										</tree>
									</tree>
								</tree>
								<tree type="catch_clause" pos="1270" length="82">
									<tree type="catch" pos="1270" length="5" label="catch"/>
									<tree type="parameter" pos="1277" length="19">
										<tree type="type_name" pos="1277" length="5">
											<tree type="primitive_type" pos="1277" length="5">
												<tree type="bytes" pos="1277" length="5" label="bytes"/>
											</tree>
										</tree>
										<tree type="memory" pos="1283" length="6" label="memory"/>
										<tree type="identifier" pos="1290" length="6" label="reason"/>
									</tree>
									<tree type="block_statement" pos="1298" length="54">
										<tree type="emit_statement" pos="1316" length="22">
											<tree type="emit" pos="1316" length="4" label="emit"/>
											<tree type="identifier" pos="1321" length="8" label="LogBytes"/>
											<tree type="call_argument" pos="1330" length="6">
												<tree type="identifier" pos="1330" length="6" label="reason"/>
											</tree>
										</tree>
									</tree>
								</tree>
							</tree>
						</tree>
					</tree>
				</tree>
			</tree>
			<tree type="comment" pos="1374" length="48" label="// Example of try / catch with contract creation"/>
			<tree type="comment" pos="1427" length="92" label="// tryCatchNewContract(0x0000000000000000000000000000000000000000) =&gt; Log(&quot;invalid address&quot;)"/>
			<tree type="comment" pos="1524" length="82" label="// tryCatchNewContract(0x0000000000000000000000000000000000000001) =&gt; LogBytes(&quot;&quot;)"/>
			<tree type="comment" pos="1611" length="88" label="// tryCatchNewContract(0x0000000000000000000000000000000000000002) =&gt; Log(&quot;Foo created&quot;)"/>
			<tree type="function_definition" pos="1704" length="440">
				<tree type="function" pos="1704" length="8" label="function"/>
				<tree type="identifier" pos="1713" length="19" label="tryCatchNewContract"/>
				<tree type="parameter" pos="1733" length="14">
					<tree type="type_name" pos="1733" length="7">
						<tree type="primitive_type" pos="1733" length="7">
							<tree type="address" pos="1733" length="7" label="address"/>
						</tree>
					</tree>
					<tree type="identifier" pos="1741" length="6" label="_owner"/>
				</tree>
				<tree type="visibility" pos="1749" length="6">
					<tree type="public" pos="1749" length="6" label="public"/>
				</tree>
				<tree type="function_body" pos="1756" length="388">
					<tree type="try_statement" pos="1766" length="372">
						<tree type="try" pos="1766" length="3" label="try"/>
						<tree type="call_expression" pos="1770" length="15">
							<tree type="new_expression" pos="1770" length="7">
								<tree type="new" pos="1770" length="3" label="new"/>
								<tree type="type_name" pos="1774" length="3">
									<tree type="user_defined_type" pos="1774" length="3">
										<tree type="identifier" pos="1774" length="3" label="Foo"/>
									</tree>
								</tree>
							</tree>
							<tree type="call_argument" pos="1778" length="6">
								<tree type="identifier" pos="1778" length="6" label="_owner"/>
							</tree>
						</tree>
						<tree type="returns" pos="1786" length="7" label="returns"/>
						<tree type="parameter" pos="1795" length="7">
							<tree type="type_name" pos="1795" length="3">
								<tree type="user_defined_type" pos="1795" length="3">
									<tree type="identifier" pos="1795" length="3" label="Foo"/>
								</tree>
							</tree>
							<tree type="identifier" pos="1799" length="3" label="foo"/>
						</tree>
						<tree type="block_statement" pos="1804" length="93">
							<tree type="comment" pos="1818" length="32" label="// you can use variable foo here"/>
							<tree type="emit_statement" pos="1863" length="24">
								<tree type="emit" pos="1863" length="4" label="emit"/>
								<tree type="identifier" pos="1868" length="3" label="Log"/>
								<tree type="call_argument" pos="1872" length="13">
									<tree type="string_literal" pos="1872" length="13">
										<tree type="string" pos="1872" length="13" label="&quot;Foo created&quot;"/>
									</tree>
								</tree>
							</tree>
						</tree>
						<tree type="catch_clause" pos="1898" length="127">
							<tree type="catch" pos="1898" length="5" label="catch"/>
							<tree type="identifier" pos="1904" length="5" label="Error"/>
							<tree type="parameter" pos="1910" length="20">
								<tree type="type_name" pos="1910" length="6">
									<tree type="primitive_type" pos="1910" length="6">
										<tree type="string" pos="1910" length="6" label="string"/>
									</tree>
								</tree>
								<tree type="memory" pos="1917" length="6" label="memory"/>
								<tree type="identifier" pos="1924" length="6" label="reason"/>
							</tree>
							<tree type="block_statement" pos="1932" length="93">
								<tree type="comment" pos="1946" length="39" label="// catch failing revert() and require()"/>
								<tree type="emit_statement" pos="1998" length="17">
									<tree type="emit" pos="1998" length="4" label="emit"/>
									<tree type="identifier" pos="2003" length="3" label="Log"/>
									<tree type="call_argument" pos="2007" length="6">
										<tree type="identifier" pos="2007" length="6" label="reason"/>
									</tree>
								</tree>
							</tree>
						</tree>
						<tree type="catch_clause" pos="2026" length="112">
							<tree type="catch" pos="2026" length="5" label="catch"/>
							<tree type="parameter" pos="2033" length="19">
								<tree type="type_name" pos="2033" length="5">
									<tree type="primitive_type" pos="2033" length="5">
										<tree type="bytes" pos="2033" length="5" label="bytes"/>
									</tree>
								</tree>
								<tree type="memory" pos="2039" length="6" label="memory"/>
								<tree type="identifier" pos="2046" length="6" label="reason"/>
							</tree>
							<tree type="block_statement" pos="2054" length="84">
								<tree type="comment" pos="2068" length="25" label="// catch failing assert()"/>
								<tree type="emit_statement" pos="2106" length="22">
									<tree type="emit" pos="2106" length="4" label="emit"/>
									<tree type="identifier" pos="2111" length="8" label="LogBytes"/>
									<tree type="call_argument" pos="2120" length="6">
										<tree type="identifier" pos="2120" length="6" label="reason"/>
									</tree>
								</tree>
							</tree>
						</tree>
					</tree>
				</tree>
			</tree>
		</tree>
	</tree>
</tree>

