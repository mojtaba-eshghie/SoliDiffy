<tree type="source_file" pos="0" length="1949">
	<tree type="comment" pos="0" length="31" label="// SPDX-License-Identifier: MIT"/>
	<tree type="pragma_directive" pos="32" length="24">
		<tree type="pragma" pos="32" length="6" label="pragma"/>
		<tree type="solidity_pragma_token" pos="39" length="16">
			<tree type="solidity" pos="39" length="8" label="solidity"/>
			<tree type="solidity_version_comparison_operator" pos="47" length="2">
				<tree type="^" pos="47" length="2" label=" ^"/>
			</tree>
			<tree type="solidity_version" pos="49" length="6" label="0.8.20"/>
		</tree>
	</tree>
	<tree type="comment" pos="58" length="50" label="// External contract used for try / catch examples"/>
	<tree type="contract_declaration" pos="109" length="425">
		<tree type="contract" pos="109" length="8" label="contract"/>
		<tree type="identifier" pos="118" length="3" label="Foo"/>
		<tree type="contract_body" pos="122" length="412">
			<tree type="state_variable_declaration" pos="128" length="21">
				<tree type="type_name" pos="128" length="7">
					<tree type="primitive_type" pos="128" length="7">
						<tree type="address" pos="128" length="7" label="address"/>
					</tree>
				</tree>
				<tree type="visibility" pos="136" length="6">
					<tree type="public" pos="136" length="6" label="public"/>
				</tree>
				<tree type="identifier" pos="143" length="5" label="owner"/>
			</tree>
			<tree type="constructor_definition" pos="154" length="208">
				<tree type="constructor" pos="154" length="11" label="constructor"/>
				<tree type="parameter" pos="166" length="14">
					<tree type="type_name" pos="166" length="7">
						<tree type="primitive_type" pos="166" length="7">
							<tree type="address" pos="166" length="7" label="address"/>
						</tree>
					</tree>
					<tree type="identifier" pos="174" length="6" label="_owner"/>
				</tree>
				<tree type="function_body" pos="182" length="180">
					<tree type="expression_statement" pos="192" length="49">
						<tree type="call_expression" pos="192" length="48">
							<tree type="identifier" pos="192" length="7" label="require"/>
							<tree type="call_argument" pos="200" length="20">
								<tree type="binary_expression" pos="200" length="20">
									<tree type="identifier" pos="200" length="6" label="_owner"/>
									<tree type="!=" pos="207" length="2" label="!="/>
									<tree type="type_cast_expression" pos="210" length="10">
										<tree type="primitive_type" pos="210" length="7">
											<tree type="address" pos="210" length="7" label="address"/>
										</tree>
										<tree type="number_literal" pos="218" length="1" label="0"/>
									</tree>
								</tree>
							</tree>
							<tree type="call_argument" pos="222" length="17">
								<tree type="string_literal" pos="222" length="17">
									<tree type="string" pos="222" length="17" label="&quot;invalid address&quot;"/>
								</tree>
							</tree>
						</tree>
					</tree>
					<tree type="expression_statement" pos="250" length="61">
						<tree type="call_expression" pos="250" length="60">
							<tree type="identifier" pos="250" length="6" label="assert"/>
							<tree type="call_argument" pos="257" length="52">
								<tree type="binary_expression" pos="257" length="52">
									<tree type="identifier" pos="257" length="6" label="_owner"/>
									<tree type="!=" pos="264" length="2" label="!="/>
									<tree type="number_literal" pos="267" length="42" label="0x0000000000000000000000000000000000000001"/>
								</tree>
							</tree>
						</tree>
					</tree>
					<tree type="expression_statement" pos="320" length="19">
						<tree type="assignment_expression" pos="320" length="18">
							<tree type="identifier" pos="320" length="5" label="owner"/>
							<tree type="=" pos="326" length="1" label="="/>
							<tree type="type_cast_expression" pos="328" length="10">
								<tree type="primitive_type" pos="328" length="7">
									<tree type="address" pos="328" length="7" label="address"/>
								</tree>
								<tree type="number_literal" pos="336" length="1" label="0"/>
							</tree>
						</tree>
					</tree>
					<tree type="comment" pos="340" length="16" label="// Mutation here"/>
				</tree>
			</tree>
			<tree type="function_definition" pos="368" length="164">
				<tree type="function" pos="368" length="8" label="function"/>
				<tree type="identifier" pos="377" length="6" label="myFunc"/>
				<tree type="parameter" pos="384" length="6">
					<tree type="type_name" pos="384" length="4">
						<tree type="primitive_type" pos="384" length="4">
							<tree type="uint" pos="384" length="4" label="uint"/>
						</tree>
					</tree>
					<tree type="identifier" pos="389" length="1" label="x"/>
				</tree>
				<tree type="visibility" pos="392" length="6">
					<tree type="public" pos="392" length="6" label="public"/>
				</tree>
				<tree type="state_mutability" pos="399" length="4">
					<tree type="pure" pos="399" length="4" label="pure"/>
				</tree>
				<tree type="return_type_definition" pos="404" length="23">
					<tree type="returns" pos="404" length="7" label="returns"/>
					<tree type="parameter" pos="413" length="13">
						<tree type="type_name" pos="413" length="6">
							<tree type="primitive_type" pos="413" length="6">
								<tree type="string" pos="413" length="6" label="string"/>
							</tree>
						</tree>
						<tree type="memory" pos="420" length="6" label="memory"/>
					</tree>
				</tree>
				<tree type="function_body" pos="428" length="104">
					<tree type="expression_statement" pos="438" length="34">
						<tree type="call_expression" pos="438" length="33">
							<tree type="identifier" pos="438" length="7" label="require"/>
							<tree type="call_argument" pos="446" length="6">
								<tree type="binary_expression" pos="446" length="6">
									<tree type="identifier" pos="446" length="1" label="x"/>
									<tree type="==" pos="448" length="2" label="=="/>
									<tree type="number_literal" pos="451" length="1" label="0"/>
								</tree>
							</tree>
							<tree type="call_argument" pos="454" length="16">
								<tree type="string_literal" pos="454" length="16">
									<tree type="string" pos="454" length="16" label="&quot;require failed&quot;"/>
								</tree>
							</tree>
						</tree>
					</tree>
					<tree type="comment" pos="473" length="16" label="// Mutation here"/>
					<tree type="return_statement" pos="498" length="28">
						<tree type="return" pos="498" length="6" label="return"/>
						<tree type="string_literal" pos="505" length="20">
							<tree type="string" pos="505" length="20" label="&quot;my func was called&quot;"/>
						</tree>
					</tree>
				</tree>
			</tree>
		</tree>
	</tree>
	<tree type="contract_declaration" pos="536" length="1413">
		<tree type="contract" pos="536" length="8" label="contract"/>
		<tree type="identifier" pos="545" length="3" label="Bar"/>
		<tree type="contract_body" pos="549" length="1400">
			<tree type="event_definition" pos="555" length="26">
				<tree type="event" pos="555" length="5" label="event"/>
				<tree type="identifier" pos="561" length="3" label="Log"/>
				<tree type="event_paramater" pos="565" length="14">
					<tree type="type_name" pos="565" length="6">
						<tree type="primitive_type" pos="565" length="6">
							<tree type="string" pos="565" length="6" label="string"/>
						</tree>
					</tree>
					<tree type="identifier" pos="572" length="7" label="message"/>
				</tree>
			</tree>
			<tree type="event_definition" pos="586" length="27">
				<tree type="event" pos="586" length="5" label="event"/>
				<tree type="identifier" pos="592" length="8" label="LogBytes"/>
				<tree type="event_paramater" pos="601" length="10">
					<tree type="type_name" pos="601" length="5">
						<tree type="primitive_type" pos="601" length="5">
							<tree type="bytes" pos="601" length="5" label="bytes"/>
						</tree>
					</tree>
					<tree type="identifier" pos="607" length="4" label="data"/>
				</tree>
			</tree>
			<tree type="state_variable_declaration" pos="619" length="15">
				<tree type="type_name" pos="619" length="3">
					<tree type="user_defined_type" pos="619" length="3">
						<tree type="identifier" pos="619" length="3" label="Foo"/>
					</tree>
				</tree>
				<tree type="visibility" pos="623" length="6">
					<tree type="public" pos="623" length="6" label="public"/>
				</tree>
				<tree type="identifier" pos="630" length="3" label="foo"/>
			</tree>
			<tree type="constructor_definition" pos="640" length="137">
				<tree type="constructor" pos="640" length="11" label="constructor"/>
				<tree type="function_body" pos="654" length="123">
					<tree type="comment" pos="664" length="72" label="// This Foo contract is used for example of try catch with external call"/>
					<tree type="expression_statement" pos="745" length="26">
						<tree type="assignment_expression" pos="745" length="25">
							<tree type="identifier" pos="745" length="3" label="foo"/>
							<tree type="=" pos="749" length="1" label="="/>
							<tree type="call_expression" pos="751" length="19">
								<tree type="new_expression" pos="751" length="7">
									<tree type="new" pos="751" length="3" label="new"/>
									<tree type="type_name" pos="755" length="3">
										<tree type="user_defined_type" pos="755" length="3">
											<tree type="identifier" pos="755" length="3" label="Foo"/>
										</tree>
									</tree>
								</tree>
								<tree type="call_argument" pos="759" length="10">
									<tree type="member_expression" pos="759" length="10">
										<tree type="identifier" pos="759" length="3" label="msg"/>
										<tree type="identifier" pos="763" length="6" label="sender"/>
									</tree>
								</tree>
							</tree>
						</tree>
					</tree>
				</tree>
			</tree>
			<tree type="comment" pos="783" length="44" label="// Example of try / catch with external call"/>
			<tree type="comment" pos="832" length="57" label="// tryCatchExternalCall(0) =&gt; Log(&quot;external call failed&quot;)"/>
			<tree type="comment" pos="894" length="55" label="// tryCatchExternalCall(1) =&gt; Log(&quot;my func was called&quot;)"/>
			<tree type="function_definition" pos="954" length="217">
				<tree type="function" pos="954" length="8" label="function"/>
				<tree type="identifier" pos="963" length="20" label="tryCatchExternalCall"/>
				<tree type="parameter" pos="984" length="7">
					<tree type="type_name" pos="984" length="4">
						<tree type="primitive_type" pos="984" length="4">
							<tree type="uint" pos="984" length="4" label="uint"/>
						</tree>
					</tree>
					<tree type="identifier" pos="989" length="2" label="_i"/>
				</tree>
				<tree type="visibility" pos="993" length="6">
					<tree type="public" pos="993" length="6" label="public"/>
				</tree>
				<tree type="function_body" pos="1000" length="171">
					<tree type="try_statement" pos="1010" length="155">
						<tree type="try" pos="1010" length="3" label="try"/>
						<tree type="call_expression" pos="1014" length="14">
							<tree type="member_expression" pos="1014" length="10">
								<tree type="identifier" pos="1014" length="3" label="foo"/>
								<tree type="identifier" pos="1018" length="6" label="myFunc"/>
							</tree>
							<tree type="call_argument" pos="1025" length="2">
								<tree type="identifier" pos="1025" length="2" label="_i"/>
							</tree>
						</tree>
						<tree type="returns" pos="1029" length="7" label="returns"/>
						<tree type="parameter" pos="1038" length="20">
							<tree type="type_name" pos="1038" length="6">
								<tree type="primitive_type" pos="1038" length="6">
									<tree type="string" pos="1038" length="6" label="string"/>
								</tree>
							</tree>
							<tree type="memory" pos="1045" length="6" label="memory"/>
							<tree type="identifier" pos="1052" length="6" label="result"/>
						</tree>
						<tree type="block_statement" pos="1060" length="41">
							<tree type="emit_statement" pos="1074" length="17">
								<tree type="emit" pos="1074" length="4" label="emit"/>
								<tree type="identifier" pos="1079" length="3" label="Log"/>
								<tree type="call_argument" pos="1083" length="6">
									<tree type="identifier" pos="1083" length="6" label="result"/>
								</tree>
							</tree>
						</tree>
						<tree type="catch_clause" pos="1102" length="63">
							<tree type="catch" pos="1102" length="5" label="catch"/>
							<tree type="block_statement" pos="1108" length="57">
								<tree type="emit_statement" pos="1122" length="33">
									<tree type="emit" pos="1122" length="4" label="emit"/>
									<tree type="identifier" pos="1127" length="3" label="Log"/>
									<tree type="call_argument" pos="1131" length="22">
										<tree type="string_literal" pos="1131" length="22">
											<tree type="string" pos="1131" length="22" label="&quot;external call failed&quot;"/>
										</tree>
									</tree>
								</tree>
							</tree>
						</tree>
					</tree>
				</tree>
			</tree>
			<tree type="comment" pos="1177" length="48" label="// Example of try / catch with contract creation"/>
			<tree type="comment" pos="1230" length="92" label="// tryCatchNewContract(0x0000000000000000000000000000000000000000) =&gt; Log(&quot;invalid address&quot;)"/>
			<tree type="comment" pos="1327" length="82" label="// tryCatchNewContract(0x0000000000000000000000000000000000000001) =&gt; LogBytes(&quot;&quot;)"/>
			<tree type="comment" pos="1414" length="88" label="// tryCatchNewContract(0x0000000000000000000000000000000000000002) =&gt; Log(&quot;Foo created&quot;)"/>
			<tree type="function_definition" pos="1507" length="440">
				<tree type="function" pos="1507" length="8" label="function"/>
				<tree type="identifier" pos="1516" length="19" label="tryCatchNewContract"/>
				<tree type="parameter" pos="1536" length="14">
					<tree type="type_name" pos="1536" length="7">
						<tree type="primitive_type" pos="1536" length="7">
							<tree type="address" pos="1536" length="7" label="address"/>
						</tree>
					</tree>
					<tree type="identifier" pos="1544" length="6" label="_owner"/>
				</tree>
				<tree type="visibility" pos="1552" length="6">
					<tree type="public" pos="1552" length="6" label="public"/>
				</tree>
				<tree type="function_body" pos="1559" length="388">
					<tree type="try_statement" pos="1569" length="372">
						<tree type="try" pos="1569" length="3" label="try"/>
						<tree type="call_expression" pos="1573" length="15">
							<tree type="new_expression" pos="1573" length="7">
								<tree type="new" pos="1573" length="3" label="new"/>
								<tree type="type_name" pos="1577" length="3">
									<tree type="user_defined_type" pos="1577" length="3">
										<tree type="identifier" pos="1577" length="3" label="Foo"/>
									</tree>
								</tree>
							</tree>
							<tree type="call_argument" pos="1581" length="6">
								<tree type="identifier" pos="1581" length="6" label="_owner"/>
							</tree>
						</tree>
						<tree type="returns" pos="1589" length="7" label="returns"/>
						<tree type="parameter" pos="1598" length="7">
							<tree type="type_name" pos="1598" length="3">
								<tree type="user_defined_type" pos="1598" length="3">
									<tree type="identifier" pos="1598" length="3" label="Foo"/>
								</tree>
							</tree>
							<tree type="identifier" pos="1602" length="3" label="foo"/>
						</tree>
						<tree type="block_statement" pos="1607" length="93">
							<tree type="comment" pos="1621" length="32" label="// you can use variable foo here"/>
							<tree type="emit_statement" pos="1666" length="24">
								<tree type="emit" pos="1666" length="4" label="emit"/>
								<tree type="identifier" pos="1671" length="3" label="Log"/>
								<tree type="call_argument" pos="1675" length="13">
									<tree type="string_literal" pos="1675" length="13">
										<tree type="string" pos="1675" length="13" label="&quot;Foo created&quot;"/>
									</tree>
								</tree>
							</tree>
						</tree>
						<tree type="catch_clause" pos="1701" length="127">
							<tree type="catch" pos="1701" length="5" label="catch"/>
							<tree type="identifier" pos="1707" length="5" label="Error"/>
							<tree type="parameter" pos="1713" length="20">
								<tree type="type_name" pos="1713" length="6">
									<tree type="primitive_type" pos="1713" length="6">
										<tree type="string" pos="1713" length="6" label="string"/>
									</tree>
								</tree>
								<tree type="memory" pos="1720" length="6" label="memory"/>
								<tree type="identifier" pos="1727" length="6" label="reason"/>
							</tree>
							<tree type="block_statement" pos="1735" length="93">
								<tree type="comment" pos="1749" length="39" label="// catch failing revert() and require()"/>
								<tree type="emit_statement" pos="1801" length="17">
									<tree type="emit" pos="1801" length="4" label="emit"/>
									<tree type="identifier" pos="1806" length="3" label="Log"/>
									<tree type="call_argument" pos="1810" length="6">
										<tree type="identifier" pos="1810" length="6" label="reason"/>
									</tree>
								</tree>
							</tree>
						</tree>
						<tree type="catch_clause" pos="1829" length="112">
							<tree type="catch" pos="1829" length="5" label="catch"/>
							<tree type="parameter" pos="1836" length="19">
								<tree type="type_name" pos="1836" length="5">
									<tree type="primitive_type" pos="1836" length="5">
										<tree type="bytes" pos="1836" length="5" label="bytes"/>
									</tree>
								</tree>
								<tree type="memory" pos="1842" length="6" label="memory"/>
								<tree type="identifier" pos="1849" length="6" label="reason"/>
							</tree>
							<tree type="block_statement" pos="1857" length="84">
								<tree type="comment" pos="1871" length="25" label="// catch failing assert()"/>
								<tree type="emit_statement" pos="1909" length="22">
									<tree type="emit" pos="1909" length="4" label="emit"/>
									<tree type="identifier" pos="1914" length="8" label="LogBytes"/>
									<tree type="call_argument" pos="1923" length="6">
										<tree type="identifier" pos="1923" length="6" label="reason"/>
									</tree>
								</tree>
							</tree>
						</tree>
					</tree>
				</tree>
			</tree>
		</tree>
	</tree>
</tree>

